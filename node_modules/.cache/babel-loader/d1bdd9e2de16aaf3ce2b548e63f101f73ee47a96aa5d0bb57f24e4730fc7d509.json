{"ast":null,"code":"import _defineProperty from\"/Users/user/Projects/M/create-meme-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/user/Projects/M/create-meme-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/user/Projects/M/create-meme-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/user/Projects/M/create-meme-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/user/Projects/M/create-meme-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";//import memeData from \"./memesData\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Form(){var _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),allMemeData=_React$useState2[0],setMemeAllImages=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),imgState=_React$useState4[0],setImageState=_React$useState4[1];/*   const [url, setImage] = React.useState(\"\");\r\n   */var _React$useState5=React.useState({topText:\"\",bottomText:\"\",randomImage:\"\"}),_React$useState6=_slicedToArray(_React$useState5,2),meme=_React$useState6[0],setMeme=_React$useState6[1];React.useEffect(function(){function getMemesApi(){return _getMemesApi.apply(this,arguments);}function _getMemesApi(){_getMemesApi=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.imgflip.com/get_memes\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setMemeAllImages(data);case 7:case\"end\":return _context.stop();}},_callee);}));return _getMemesApi.apply(this,arguments);}getMemesApi();},[]);function imghandle(event){var url=\"\";if(event.target.files.length!==0){url=URL.createObjectURL(event.target.files[0]);}// url = URL.createObjectURL(event.target.files[0]);\nif(url!==\"\"){setImageState(true);setMeme(_objectSpread(_objectSpread({},meme),{},{randomImage:url}));}}function handleClick(){var memesArray=allMemeData.data.memes;var randomIndex=Math.floor(Math.random()*memesArray.length);var imgUrl=memesArray[randomIndex].url;setImageState(true);setMeme(_objectSpread(_objectSpread({},meme),{},{randomImage:imgUrl}));}function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setMeme(_objectSpread(_objectSpread({},meme),{},_defineProperty({},name,value)));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-class\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-text\",onChange:handleChange,name:\"topText\",value:meme.topText,placeholder:\"Enter top text\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-text\",onChange:handleChange,name:\"bottomText\",value:meme.bottomText,placeholder:\"Enter bottom text\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:handleClick,children:\"Change a random meme\"}),/*#__PURE__*/_jsx(\"p\",{className:\"upload-meme\",children:\"Choose your own meme\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"uploadedImage\",className:\"file\",onChange:imghandle})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"meme\",style:{display:imgState?\"block\":\"none\"},children:[/*#__PURE__*/_jsx(\"img\",{src:meme.randomImage,className:\"meme--img\",alt:\"meme\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme--text top\",children:meme.topText}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme--text bottom\",children:meme.bottomText})]})]});}/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Form","_React$useState","useState","_React$useState2","_slicedToArray","allMemeData","setMemeAllImages","_React$useState3","_React$useState4","imgState","setImageState","_React$useState5","topText","bottomText","randomImage","_React$useState6","meme","setMeme","useEffect","getMemesApi","_getMemesApi","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","stop","imghandle","event","url","target","files","length","URL","createObjectURL","_objectSpread","handleClick","memesArray","memes","randomIndex","Math","floor","random","imgUrl","handleChange","_event$target","name","value","_defineProperty","children","className","type","onChange","placeholder","onClick","style","display","src","alt"],"sources":["/Users/user/Projects/M/create-meme-react/src/Form.js"],"sourcesContent":["import React from \"react\";\r\n//import memeData from \"./memesData\";\r\n\r\nexport default function Form() {\r\n  const [allMemeData, setMemeAllImages] = React.useState({});\r\n  const [imgState, setImageState] = React.useState(false);\r\n  /*   const [url, setImage] = React.useState(\"\");\r\n   */ const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"\"\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    async function getMemesApi() {\r\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\r\n      const data = await response.json();\r\n      setMemeAllImages(data);\r\n    }\r\n    getMemesApi();\r\n  }, []);\r\n\r\n  function imghandle(event) {\r\n    let url = \"\";\r\n    if (event.target.files.length !== 0) {\r\n      url = URL.createObjectURL(event.target.files[0]);\r\n    }\r\n    // url = URL.createObjectURL(event.target.files[0]);\r\n\r\n    if (url !== \"\") {\r\n      setImageState(true);\r\n      setMeme({\r\n        ...meme,\r\n        randomImage: url\r\n      });\r\n    }\r\n  }\r\n  function handleClick() {\r\n    const memesArray = allMemeData.data.memes;\r\n    const randomIndex = Math.floor(Math.random() * memesArray.length);\r\n    const imgUrl = memesArray[randomIndex].url;\r\n    setImageState(true);\r\n    setMeme({\r\n      ...meme,\r\n      randomImage: imgUrl\r\n    });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme({\r\n      ...meme,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-class\">\r\n        <div className=\"form\">\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text\"\r\n              onChange={handleChange}\r\n              name=\"topText\"\r\n              value={meme.topText}\r\n              placeholder=\"Enter top text\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text\"\r\n              onChange={handleChange}\r\n              name=\"bottomText\"\r\n              value={meme.bottomText}\r\n              placeholder=\"Enter bottom text\"\r\n            />\r\n          </div>\r\n          <button className=\"btn\" onClick={handleClick}>\r\n            Change a random meme\r\n          </button>\r\n          <p className=\"upload-meme\">Choose your own meme</p>\r\n          <input\r\n            type=\"file\"\r\n            name=\"uploadedImage\"\r\n            className=\"file\"\r\n            onChange={imghandle}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"meme\" style={{ display: imgState ? \"block\" : \"none\" }}>\r\n        <img src={meme.randomImage} className=\"meme--img\" alt=\"meme\" />\r\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}