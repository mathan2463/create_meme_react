{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/M/create-meme-react/src/Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n//import memeData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [allMemeData, setMemeAllImages] = React.useState({});\n  const [imgState, setImageState] = React.useState(false);\n  /*   const [url, setImage] = React.useState(\"\");\r\n   */\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"\"\n  });\n  React.useEffect(() => {\n    async function getMemesApi() {\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await response.json();\n      setMemeAllImages(data);\n    }\n    getMemesApi();\n  }, []);\n  function imghandle(event) {\n    let url = \"\";\n    if (event.target.files.length !== 0) {\n      url = URL.createObjectURL(event.target.files[0]);\n    }\n    // url = URL.createObjectURL(event.target.files[0]);\n\n    if (url !== \"\") {\n      setImageState(true);\n      setMeme({\n        ...meme,\n        randomImage: url\n      });\n    }\n  }\n  function handleClick() {\n    const memesArray = allMemeData.data.memes;\n    const randomIndex = Math.floor(Math.random() * memesArray.length);\n    const imgUrl = memesArray[randomIndex].url;\n    setImageState(true);\n    setMeme({\n      ...meme,\n      randomImage: imgUrl\n    });\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme({\n      ...meme,\n      [name]: value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-class\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-text\",\n            onChange: handleChange,\n            name: \"topText\",\n            value: meme.topText,\n            placeholder: \"Enter top text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-text\",\n            onChange: handleChange,\n            name: \"bottomText\",\n            value: meme.bottomText,\n            placeholder: \"Enter bottom text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleClick,\n          children: \"Get a new random meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"upload-meme\",\n          children: \"Choose your own meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"uploadedImage\",\n          className: \"file\",\n          onChange: imghandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      style: {\n        display: imgState ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--img\",\n        alt: \"meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */\n_s(Form, \"rAxFUSIaJcxyStZDeYSAg57KrOw=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Form","_s","allMemeData","setMemeAllImages","useState","imgState","setImageState","meme","setMeme","topText","bottomText","randomImage","useEffect","getMemesApi","response","fetch","data","json","imghandle","event","url","target","files","length","URL","createObjectURL","handleClick","memesArray","memes","randomIndex","Math","floor","random","imgUrl","handleChange","name","value","children","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","src","alt","_c","$RefreshReg$"],"sources":["/Users/user/Projects/M/create-meme-react/src/Form.js"],"sourcesContent":["import React from \"react\";\r\n//import memeData from \"./memesData\";\r\n\r\nexport default function Form() {\r\n  const [allMemeData, setMemeAllImages] = React.useState({});\r\n  const [imgState, setImageState] = React.useState(false);\r\n  /*   const [url, setImage] = React.useState(\"\");\r\n   */ const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"\"\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    async function getMemesApi() {\r\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\r\n      const data = await response.json();\r\n      setMemeAllImages(data);\r\n    }\r\n    getMemesApi();\r\n  }, []);\r\n\r\n  function imghandle(event) {\r\n    let url = \"\";\r\n    if (event.target.files.length !== 0) {\r\n      url = URL.createObjectURL(event.target.files[0]);\r\n    }\r\n    // url = URL.createObjectURL(event.target.files[0]);\r\n\r\n    if (url !== \"\") {\r\n      setImageState(true);\r\n      setMeme({\r\n        ...meme,\r\n        randomImage: url\r\n      });\r\n    }\r\n  }\r\n  function handleClick() {\r\n    const memesArray = allMemeData.data.memes;\r\n    const randomIndex = Math.floor(Math.random() * memesArray.length);\r\n    const imgUrl = memesArray[randomIndex].url;\r\n    setImageState(true);\r\n    setMeme({\r\n      ...meme,\r\n      randomImage: imgUrl\r\n    });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme({\r\n      ...meme,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-class\">\r\n        <div className=\"form\">\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text\"\r\n              onChange={handleChange}\r\n              name=\"topText\"\r\n              value={meme.topText}\r\n              placeholder=\"Enter top text\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text\"\r\n              onChange={handleChange}\r\n              name=\"bottomText\"\r\n              value={meme.bottomText}\r\n              placeholder=\"Enter bottom text\"\r\n            />\r\n          </div>\r\n          <button className=\"btn\" onClick={handleClick}>\r\n            Get a new random meme\r\n          </button>\r\n          <p className=\"upload-meme\">Choose your own meme</p>\r\n          <input\r\n            type=\"file\"\r\n            name=\"uploadedImage\"\r\n            className=\"file\"\r\n            onChange={imghandle}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"meme\" style={{ display: imgState ? \"block\" : \"none\" }}>\r\n        <img src={meme.randomImage} className=\"meme--img\" alt=\"meme\" />\r\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}